,description,link,name,number,website
0," Foundations of data science from three perspectives: inferential thinking, computational thinking, and real-world relevance. Given data arising from some real-world phenomenon, how does one analyze that data so as to understand that phenomenon? The course teaches critical concepts and skills in computer programming and statistical inference, in conjunction with hands-on analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. It delves into social and legal issues surrounding data analysis, including issues of privacy and data ownership.",https://www2.eecs.berkeley.edu/Courses/CSC8,,CS C8,http://inst.eecs.berkeley.edu/~cs8
1," Fundamental dynamic data structures, including linear lists, queues, trees, and other linked structures; arrays strings, and hash tables. Storage management. Elementary principles of software engineering. Abstract data types. Algorithms for sorting and searching. Introduction to the Java programming language. ",https://www2.eecs.berkeley.edu/Courses/CS61B,The Structure and Interpretation of Computer Programs,CS 61B,http://inst.eecs.berkeley.edu/~cs61b
2," An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters and macros. The course exposes students to programming paradigms, including functional, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.",https://www2.eecs.berkeley.edu/Courses/CS61A,Self-paced courses,CS 61A,http://inst.eecs.berkeley.edu/~cs61a
3," This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16A and be ready for EE16B or EE47E. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.",https://www2.eecs.berkeley.edu/Courses/EECS47D_1977,Self-paced courses,EECS 47D,http://inst.eecs.berkeley.edu/~eecs47d
4," MIPS instruction set simulation. The assembly and linking process. Caches and virtual memory. Pipelined computer organization. Students with sufficient partial credit in 61C may, with consent of instructor, complete the credit in this self-paced course. ",https://www2.eecs.berkeley.edu/Courses/CS47C_1977,Self-paced courses,CS 47C,http://inst.eecs.berkeley.edu/~cs47c
5," Iterators. Hashing, applied to strings and multi-dimensional structures. Heaps. Storage management. Design and implementation of a program containing hundreds of lines of code. Students who have completed a portion of the subject matter of COMPSCI 61B may, with consent of instructor, complete COMPSCI 61B in this self-paced course.  Please note that students in the College of Engineering are required to receive additional permission from the College as well as the EECS department for the course to count in place of COMPSCI 61B.",https://www2.eecs.berkeley.edu/Courses/CS47B_1977,Self-paced courses,CS 47B,http://inst.eecs.berkeley.edu/~cs47b
6," Iterators. Hashing, applied to strings and multi-dimensional structures. Heaps. Storage management. Design and implementation of a program containing hundreds of lines of code. Students who have completed a portion of the subject matter of COMPSCI 61B may, with consent of instructor, complete COMPSCI 61B in this self-paced course.  Please note that students in the College of Engineering are required to receive additional permission from the College as well as the EECS department for the course to count in place of COMPSCI 61B.",https://www2.eecs.berkeley.edu/Courses/CS47B_1977,Self-paced courses,CS 47B,http://inst.eecs.berkeley.edu/~cs47b
7," Implementation of generic operations. Streams and iterators. Implementation techniques for supporting functional, object-oriented, and constraint-based programming in the Scheme programming language. Together with 9D, 47A constitutes an abbreviated, self-paced version of 61A for students who have already taken a course equivalent to 61B. ",https://www2.eecs.berkeley.edu/Courses/CS47A_1977,Our Digital Quandary: The Co-Evolution of Information Technology and Society,CS 47A,http://inst.eecs.berkeley.edu/~cs47a
8," The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small-seminar setting. Freshman seminars are offered in all campus departments, and topics vary from department to department and semester to semester. Enrollment limited to 15 freshmen. ",https://www2.eecs.berkeley.edu/Courses/CS24_4505,The Coevolution of Humans and Machines,CS 24,http://inst.eecs.berkeley.edu/~cs24
9," The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small-seminar setting. Freshman seminars are offered in all campus departments, and topics vary from department to department and semester to semester. Enrollment limited to 15 freshmen. ",https://www2.eecs.berkeley.edu/Courses/CS24_4247,"Boeing 737 MAX: Money, Machines, and Morals in Conflict",CS 24,http://inst.eecs.berkeley.edu/~cs24
10," The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small-seminar setting. Freshman seminars are offered in all campus departments, and topics vary from department to department and semester to semester. Enrollment limited to 15 freshmen. ",https://www2.eecs.berkeley.edu/Courses/CS24_4072,Designing Information Devices and Systems II,CS 24,http://inst.eecs.berkeley.edu/~cs24
11," This course is a follow-on to EECS 16A, and focuses on the fundamentals of designing and building modern information devices and systems that interface with the real world. The course sequence provides a comprehensive introduction to core EECS topics in machine learning, circuit design, control, and signal processing while developing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper exercises. The courses are aimed at entering students as well as non-majors seeking a broad introduction to the field.",https://www2.eecs.berkeley.edu/Courses/EECS16B,Designing Information Devices and Systems I,EECS 16B,http://inst.eecs.berkeley.edu/~eecs16b
12," This course is a follow-on to EECS 16A, and focuses on the fundamentals of designing and building modern information devices and systems that interface with the real world. The course sequence provides a comprehensive introduction to core EECS topics in machine learning, circuit design, control, and signal processing while developing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper exercises. The courses are aimed at entering students as well as non-majors seeking a broad introduction to the field.",https://www2.eecs.berkeley.edu/Courses/EECS16B,Designing Information Devices and Systems I,EECS 16B,http://inst.eecs.berkeley.edu/~eecs16b
13," This course and its follow-on course EECS16B focus on the fundamentals of designing modern information devices and systems that interface with the real world. Together, this course sequence provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design while introducing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises. The courses are aimed at entering students as well as non-majors seeking a broad foundation for the field.",https://www2.eecs.berkeley.edu/Courses/EECS16A,The Beauty and Joy of Computing,EECS 16A,http://inst.eecs.berkeley.edu/~eecs16a
14," An introductory course for students with minimal prior exposure to computer science. Prepares students for future computer science courses and empowers them to utilize programming to solve problems in their field of study. Presents an overview of the history, great principles, and transformative applications of computer science, as well as a comprehensive introduction to programming. Topics include abstraction, recursion, algorithmic complexity, higher-order functions, concurrency, social implications of computing (privacy, education, algorithmic bias), and engaging research areas (data science, AI, HCI). Students will program in Snap! (a friendly graphical language) and Python, and will design and implement two projects of their choice.",https://www2.eecs.berkeley.edu/Courses/CS10,Foundations of Data Science,CS 10,http://inst.eecs.berkeley.edu/~cs10
15," This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS127,Probability and Random Processes,EECS 127,http://inst.eecs.berkeley.edu/~eecs127
16," This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS127,Probability and Random Processes,EECS 127,http://inst.eecs.berkeley.edu/~eecs127
17," Discussion and practice of techniques for effective teaching, focusing on issues most relevant to teaching assistants in computer science courses. ",https://www2.eecs.berkeley.edu/Courses/CS375,Adaptive Instruction Methods in Computer Science,CS 375,http://inst.eecs.berkeley.edu/~cs375
18," Discussion of effective teaching techniques. Use of educational objectives, alternative forms of instruction, and proven techniques to enhance student learning. This course is intended to orient new student instructors to more effectively teach courses offered by the Department of Electrical Engineering and Computer Sciences at UC Berkeley.",https://www2.eecs.berkeley.edu/Courses/EE375,Population Games,EE 375,http://inst.eecs.berkeley.edu/~ee375
19, Investigation of problems in electrical engineering. ,https://www2.eecs.berkeley.edu/Courses/EE299,Introduction to Quantum Devices,EE 299,http://inst.eecs.berkeley.edu/~ee299
20, The 290 courses cover current topics of research interest in electrical engineering. The course content may vary from semester to semester. ,https://www2.eecs.berkeley.edu/Courses/EE290_4188,21st Century Power System Dynamics,EE 290,http://inst.eecs.berkeley.edu/~ee290
21, The 290 courses cover current topics of research interest in electrical engineering. The course content may vary from semester to semester. ,https://www2.eecs.berkeley.edu/Courses/EE290_4525,Medical Imaging Signals and Systems,EE 290,http://inst.eecs.berkeley.edu/~ee290
22, The 290 courses cover current topics of research interest in electrical engineering. The course content may vary from semester to semester. ,https://www2.eecs.berkeley.edu/Courses/EE290_3429,Introduction to Digital Design and Integrated Circuits Lab,EE 290,http://inst.eecs.berkeley.edu/~ee290
23," Biomedical imaging is a clinically important application of engineering, applied mathematics, physics, and medicine. In this course, we apply linear systems theory and basic physics to analyze X-ray imaging, computerized tomography, nuclear medicine, and MRI. We cover the basic physics and instrumentation that characterizes medical image as an ideal perfect-resolution image blurred by an impulse response. This material could prepare the student for a career in designing new medical imaging systems that reliably detect small tumors or infarcts. ",https://www2.eecs.berkeley.edu/Courses/EEC261,Introduction to Digital Design and Integrated Circuits Lab,EE C261,http://inst.eecs.berkeley.edu/~ee261
24," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
25," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
26," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
27," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
28," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
29," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
30," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
31," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB,http://inst.eecs.berkeley.edu/~eecs251lb
32," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LA,http://inst.eecs.berkeley.edu/~eecs251la
33," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LA,http://inst.eecs.berkeley.edu/~eecs251la
34," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LA,http://inst.eecs.berkeley.edu/~eecs251la
35," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits,EECS 251LA,http://inst.eecs.berkeley.edu/~eecs251la
36," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits,EECS 251LA,http://inst.eecs.berkeley.edu/~eecs251la
37," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Embedded Systems,EECS 251LA,http://inst.eecs.berkeley.edu/~eecs251la
38," An introduction to digital circuit and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs, and projects.",https://www2.eecs.berkeley.edu/Courses/EECS251A,Introduction to Microelectromechanical Systems (MEMS),EECS 251A,http://inst.eecs.berkeley.edu/~eecs251a
39," This course introduces students to the basics of models, analysis tools, and control for embedded systems operating in real time. Students learn how to combine physical processes with computation. Topics include models of computation, control, analysis and verification, interfacing with the physical world, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects. ",https://www2.eecs.berkeley.edu/Courses/EEC249A,Analog Integrated Circuits,EE C249A,http://inst.eecs.berkeley.edu/~ee249a
40," This course will teach fundamentals of micromachining and microfabrication techniques, including planar thin-film process technologies, photolithographic techniques, deposition and etching techniques, and the other technologies that are central to MEMS fabrication. It will pay special attention to teaching of fundamentals necessary for the design and analysis of devices and systems in mechanical, electrical, fluidic, and thermal energy/signal domains, and will teach basic techniques for multi-domain analysis. Fundamentals of sensing and transduction mechanisms including capacitive and piezoresistive techniques, and design and analysis of micmicromachined miniature sensors and actuators using these techniques will be covered.",https://www2.eecs.berkeley.edu/Courses/EE247A,Integrated-Circuit Devices,EE 247A,http://inst.eecs.berkeley.edu/~ee247a
41," Single and multiple stage transistor amplifiers. Operational amplifiers. Feedback amplifiers, 2-port formulation, source, load, and feedback network loading. Frequency response of cascaded amplifiers, gain-bandwidth exchange, compensation, dominant pole techniques, root locus. Supply and temperature independent biasing and references. Selected applications of analog circuits such as analog-to-digital converters, switched capacitor filters, and comparators. Hardware laboratory and design project. ",https://www2.eecs.berkeley.edu/Courses/EE240A,Information Theory and Coding,EE 240A,http://inst.eecs.berkeley.edu/~ee240a
42," Overview of electronic properties of semiconductors. Metal-semiconductor contacts, pn junctions, bipolar transistors, and MOS field-effect transistors. Properties that are significant to device operation for integrated circuits. Silicon device fabrication technology. ",https://www2.eecs.berkeley.edu/Courses/EE230A,Convex Optimization,EE 230A,http://inst.eecs.berkeley.edu/~ee230a
43," Convex optimization is a class of nonlinear optimization problems where the objective to be minimized, and the constraints, are both convex.   The course covers some convex optimization theory and algorithms, and describes various applications arising in engineering design, machine learning and statistics, finance, and operations research. The course includes laboratory assignments, which consist of hands-on experiments with the optimization software CVX, and a discussion section.",https://www2.eecs.berkeley.edu/Courses/EE227BT,Optimization Models in Engineering,EE 227BT,http://inst.eecs.berkeley.edu/~ee227bt
44," This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS227AT,Random Processes in Systems,EECS 227AT,http://inst.eecs.berkeley.edu/~eecs227at
45," Probability, random variables and their convergence, random processes. Filtering of wide sense stationary processes, spectral density, Wiener and Kalman filters. Markov processes and Markov chains. Gaussian, birth and death, poisson and shot noise processes. Elementary queueing analysis. Detection of signals in Gaussian and shot noise, elementary parameter estimation. ",https://www2.eecs.berkeley.edu/Courses/EE226A,Audio Signal Processing in Humans and Machines,EE 226A,http://inst.eecs.berkeley.edu/~ee226a
46," Introduction to relevant signal processing and basics of pattern recognition. Introduction to coding, synthesis, and recognition. Models of speech and music production and perception. Signal processing for speech analysis. Pitch perception and auditory spectral analysis with applications to speech and music. Vocoders and music synthesizers. Statistical speech recognition, including introduction to Hidden Markov Model and Neural Network approaches. ",https://www2.eecs.berkeley.edu/Courses/EE225D,Statistical Signal Processing,EE 225D,http://inst.eecs.berkeley.edu/~ee225d
47," This course connects classical statistical signal processing (Hilbert space filtering theory by Wiener and Kolmogorov, state space model, signal representation, detection and estimation, adaptive filtering) with modern statistical and machine learning theory and applications. It focuses on concrete algorithms and combines principled theoretical thinking with real applications.",https://www2.eecs.berkeley.edu/Courses/EECS225A,Linear System Theory,EECS 225A,http://inst.eecs.berkeley.edu/~eecs225a
48," Basic system concepts; state-space and I/O representation. Properties of linear systems. Controllability, observability, minimality, state and output-feedback. Stability. Observers. Characteristic polynomial. Nyquist test. ",https://www2.eecs.berkeley.edu/Courses/EE221A,Experiential Advanced Control Design I,EE 221A,http://inst.eecs.berkeley.edu/~ee221a
49," Experience-based learning in the design of SISO and MIMO feedback controllers for linear systems. The student will master skills needed to apply linear control design and analysis tools to classical and modern control problems. In particular, the participant will be exposed to and develop expertise in two key control design technologies: frequency-domain control synthesis and time-domain optimization-based approach. ",https://www2.eecs.berkeley.edu/Courses/EEC220B,Advanced Control Systems I,EE C220B,http://inst.eecs.berkeley.edu/~ee220b
50," Input-output and state space representation of linear continuous and discrete time dynamic systems. Controllability, observability, and stability. Modeling and identification. Design and analysis of single and multi-variable feedback control systems in transform and time domain. State observer. Feedforward/preview control. Application to engineering systems. ",https://www2.eecs.berkeley.edu/Courses/EEC220A,Introduction to Optical Engineering,EE C220A,http://inst.eecs.berkeley.edu/~ee220a
51," Fundamental principles of optical systems. Geometrical optics and aberration theory. Stops and apertures, prisms, and mirrors. Diffraction and interference. Optical materials and coatings. Radiometry and photometry. Basic optical devices and the human eye. The design of optical systems. Lasers, fiber optics, and holography. ",https://www2.eecs.berkeley.edu/Courses/EE218A,Power Electronics,EE 218A,http://inst.eecs.berkeley.edu/~ee218a
52," Power conversion circuits and techniques. Characterization and design of magnetic devices including transformers, inductors, and electromagnetic  actuators.  Characteristics of  power semiconductor devices, including power diodes, SCRs, MOSFETs, IGBTs, and emerging wide bandgap devices.  Applications to renewable energy systems, high-efficiency lighting, power management in mobile electronics, and electric machine drives.  Simulation based laboratory and design project.",https://www2.eecs.berkeley.edu/Courses/EE213A,Computational Principles for High-dimensional Data Analysis,EE 213A,http://inst.eecs.berkeley.edu/~ee213a
53," Introduction to fundamental geometric and statistical concepts and principles of low-dimensional models for high-dimensional signal and data analysis, spanning basic theory, efficient algorithms, and diverse real-world applications. Systematic study of both sampling complexity and computational complexity for sparse, low-rank, and low-dimensional models – including important cases such as matrix completion, robust principal component analysis, dictionary learning, and deep networks.",https://www2.eecs.berkeley.edu/Courses/EECS208,Introduction to Robotics,EECS 208,http://inst.eecs.berkeley.edu/~eecs208
54," Introduction to fundamental geometric and statistical concepts and principles of low-dimensional models for high-dimensional signal and data analysis, spanning basic theory, efficient algorithms, and diverse real-world applications. Systematic study of both sampling complexity and computational complexity for sparse, low-rank, and low-dimensional models – including important cases such as matrix completion, robust principal component analysis, dictionary learning, and deep networks.",https://www2.eecs.berkeley.edu/Courses/EECS208,Introduction to Robotics,EECS 208,http://inst.eecs.berkeley.edu/~eecs208
55," This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECS206A,Introduction to Neurotechnology,EECS 206A,http://inst.eecs.berkeley.edu/~eecs206a
56," Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_4666,Pioneers in Engineering (PIE) Robotics DeCal,EE 198,http://inst.eecs.berkeley.edu/~ee198
57," Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_4660,Hands-On PCB Engineering (HOPE),EE 198,http://inst.eecs.berkeley.edu/~ee198
58," Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_3415,Exploration of Inclusive Pathways into the Tech Industry,EE 198,http://inst.eecs.berkeley.edu/~ee198
59," Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_4657,Field Study,EE 198,http://inst.eecs.berkeley.edu/~ee198
60," Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation. ",https://www2.eecs.berkeley.edu/Courses/EE197,Field Study,EE 197,http://inst.eecs.berkeley.edu/~ee197
61," Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation. ",https://www2.eecs.berkeley.edu/Courses/EE197,Field Study,EE 197,http://inst.eecs.berkeley.edu/~ee197
62," Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation. ",https://www2.eecs.berkeley.edu/Courses/EE197,Introduction to Digital Design and Integrated Circuits Lab,EE 197,http://inst.eecs.berkeley.edu/~ee197
63," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
64," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
65," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
66," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
67," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
68," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
69," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
70," This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB,http://inst.eecs.berkeley.edu/~eecs151lb
71," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA,http://inst.eecs.berkeley.edu/~eecs151la
72," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA,http://inst.eecs.berkeley.edu/~eecs151la
73," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA,http://inst.eecs.berkeley.edu/~eecs151la
74," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA,http://inst.eecs.berkeley.edu/~eecs151la
75," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits,EECS 151LA,http://inst.eecs.berkeley.edu/~eecs151la
76," This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits,EECS 151LA,http://inst.eecs.berkeley.edu/~eecs151la
77," An introduction to digital and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher-levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs and projects.  
The class has two lab options: ASIC Lab (EECS 151LA) and FPGA Lab (EECS 151LB). Students must enroll in at least one of the labs concurrently with the class.",https://www2.eecs.berkeley.edu/Courses/EECS151,Introduction to Embedded Systems,EECS 151,http://inst.eecs.berkeley.edu/~eecs151
78," An introduction to digital and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher-levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs and projects.  
The class has two lab options: ASIC Lab (EECS 151LA) and FPGA Lab (EECS 151LB). Students must enroll in at least one of the labs concurrently with the class.",https://www2.eecs.berkeley.edu/Courses/EECS151,Introduction to Embedded Systems,EECS 151,http://inst.eecs.berkeley.edu/~eecs151
79," This course introduces students to the basics of modeling, analysis, and design of embedded, cyber-physical systems. Students learn how to integrate computation with physical processes to meet a desired specification. Topics include models of computation, control, analysis and verification, interfacing with the physical world, real-time behaviors, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects.",https://www2.eecs.berkeley.edu/Courses/EECS149,Introduction to Microelectromechanical Systems (MEMS),EECS 149,http://inst.eecs.berkeley.edu/~eecs149
80," This course will teach fundamentals of micromachining and microfabrication techniques, including planar thin-film process technologies, photolithographic techniques, deposition and etching techniques, and the other technologies that are central to MEMS fabrication. It will pay special attention to teaching of fundamentals necessary for the design and analysis of devices and systems in mechanical, electrical, fluidic, and thermal energy/signal domains, and will teach basic techniques for multi-domain analysis. Fundamentals of sensing and transduction mechanisms including capacitive and piezoresistive techniques, and design and analysis of micmicromachined miniature sensors and actuators using these techniques will be covered.",https://www2.eecs.berkeley.edu/Courses/EE147,Medical Imaging Signals and Systems,EE 147,http://inst.eecs.berkeley.edu/~ee147
81," Biomedical imaging is a clinically important application of engineering, applied mathematics, physics, and medicine. In this course, we apply linear systems theory and basic physics to analyze X-ray imaging, computerized tomography, nuclear medicine, and MRI. We cover the basic physics and instrumentation that characterizes medical image as an ideal perfect-resolution image blurred by an impulse response. This material could prepare the student for a career in designing new medical imaging systems that reliably detect small tumors or infarcts. ",https://www2.eecs.berkeley.edu/Courses/EEC145B,Microfabrication Technology,EE C145B,http://inst.eecs.berkeley.edu/~ee145b
82," Integrated circuit device fabrication and surface micromachining technology. Thermal oxidation, ion implantation, impurity diffusion, film deposition, expitaxy, lithography, etching, contacts and interconnections, and process integration issues. Device design and mask layout, relation between physical structure and electrical/mechanical performance. MOS transistors and poly-Si surface microstructures will be fabricated in the laboratory and evaluated. ",https://www2.eecs.berkeley.edu/Courses/EE143,Analog Integrated Circuits,EE 143,http://inst.eecs.berkeley.edu/~ee143
83," Single and multiple stage transistor amplifiers. Operational amplifiers. Feedback amplifiers, 2-port formulation, source, load, and feedback network loading. Frequency response of cascaded amplifiers, gain-bandwidth exchange, compensation, dominant pole techniques, root locus. Supply and temperature independent biasing and references. Selected applications of analog circuits such as analog-to-digital converters, switched capacitor filters, and comparators. Hardware laboratory and design project. ",https://www2.eecs.berkeley.edu/Courses/EE140,Introduction to Electric Power Systems,EE 140,http://inst.eecs.berkeley.edu/~ee140
84," Overview of conventional electric power conversion and delivery, emphasizing a systemic understanding of the electric grid with primary focus at the transmission level, aimed toward recognizing needs and opportunities for technological innovation. Topics include aspects of a.c. system design, electric generators, components of transmission and distribution systems, power flow analysis, system planning and operation, performance measures, and limitations of legacy technologies. ",https://www2.eecs.berkeley.edu/Courses/EE137A,Integrated-Circuit Devices,EE 137A,http://inst.eecs.berkeley.edu/~ee137a
85," Overview of electronic properties of semiconductor. Metal-semiconductor contacts, pn junctions, bipolar transistors, and MOS field-effect transistors. Properties that are significant to device operation for integrated circuits. Silicon device fabrication technology. ",https://www2.eecs.berkeley.edu/Courses/EE130,Optimization Models in Engineering,EE 130,http://inst.eecs.berkeley.edu/~ee130
86," This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains. ",https://www2.eecs.berkeley.edu/Courses/EECS126,Signals and Systems,EECS 126,http://inst.eecs.berkeley.edu/~eecs126
87," Continuous and discrete-time transform analysis techniques with illustrative applications. Linear and time-invariant systems, transfer functions. Fourier series, Fourier transform, Laplace and Z-transforms. Sampling and reconstruction. Solution of differential and difference equations using transforms. Frequency response, Bode plots, stability analysis. Illustrated by analysis of communication systems and feedback control systems. ",https://www2.eecs.berkeley.edu/Courses/EE120,Introduction to Optical Engineering,EE 120,http://inst.eecs.berkeley.edu/~ee120
88," Fundamental principles of optical systems. Geometrical optics and aberration theory. Stops and apertures, prisms, and mirrors. Diffraction and interference. Optical materials and coatings. Radiometry and photometry. Basic optical devices and the human eye. The design of optical systems. Lasers, fiber optics, and holography. ",https://www2.eecs.berkeley.edu/Courses/EE118,Power Electronics,EE 118,http://inst.eecs.berkeley.edu/~ee118
89," Power conversion circuits and techniques. Characterization and design of magnetic devices including transformers, reactors, and electromagnetic machinery. Characteristics of bipolar and MOS power semiconductor devices. Applications to motor control, switching power supplies, lighting, power systems, and other areas as appropriate. ",https://www2.eecs.berkeley.edu/Courses/EE113,Introduction to Robotics,EE 113,http://inst.eecs.berkeley.edu/~ee113
90," This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECSC106A,Microelectronic Devices and Circuits,EECS C106A,http://inst.eecs.berkeley.edu/~eecs106a
91," This course covers the fundamental circuit and device concepts needed to understand analog integrated circuits. After an overview of the basic properties of semiconductors, the p-n junction and MOS capacitors are described and the MOSFET is modeled as a large-signal device. Two port small-signal amplifiers and their realization using single stage and multistage CMOS building blocks are discussed. Sinusoidal steady-state signals are introduced and the techniques of phasor analysis are developed, including impedance and the magnitude and phase response of linear circuits. The frequency responses of single and multi-stage amplifiers are analyzed. Differential amplifiers are introduced. ",https://www2.eecs.berkeley.edu/Courses/EE105,Personal Finance,EE 105,http://inst.eecs.berkeley.edu/~ee105
92," Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE98_4659,Sophomore Seminar,EE 98,http://inst.eecs.berkeley.edu/~ee98
93," This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16A and be ready for EE16B or EE47E. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.",https://www2.eecs.berkeley.edu/Courses/EECS47D_1977,Hands-on Ham Radio,EECS 47D,http://inst.eecs.berkeley.edu/~eecs47d
94," The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman seminars are offered in all campus departments, and topics may vary from department to department and semester to semester. ",https://www2.eecs.berkeley.edu/Courses/EE24_4510,Designing Information Devices and Systems II,EE 24,http://inst.eecs.berkeley.edu/~ee24
95," Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25. ",https://www2.eecs.berkeley.edu/Courses/EE39_2893,BLISS: Berkeley Low-cost Interplanetary Solar Sail,EE 39,http://inst.eecs.berkeley.edu/~ee39
96," This course and its follow-on course EECS16B focus on the fundamentals of designing modern information devices and systems that interface with the real world. Together, this course sequence provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design while introducing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises. The courses are aimed at entering students as well as non-majors seeking a broad foundation for the field.",https://www2.eecs.berkeley.edu/Courses/EECS16A,,EECS 16A,http://inst.eecs.berkeley.edu/~eecs16a
97," This is a course for aspiring teachers or those who want to instruct with expertise from evidence-based research and proven equity-oriented practices. It provides pedagogical training by introducing the big ideas of teaching and learning, and illustrating how to put them into practice. The course is divided into three sections—instructing the individual; a group; and psycho-social factors that affect learning at any level. These sections are designed to enhance any intern’s, tutor’s, or TA’s teaching skillset. Class is discussion based, and covers theoretical and practical pedagogical aspects to teaching in STEM. An integral feature of the course involves providing weekly tutoring sessions.",https://www2.eecs.berkeley.edu/Courses/CS370,Adaptive Instruction Methods in Computer Science,CS 370,http://inst.eecs.berkeley.edu/~cs370
98," This is a course for aspiring teachers or those who want to instruct with expertise from evidence-based research and proven equity-oriented practices. It provides pedagogical training by introducing the big ideas of teaching and learning, and illustrating how to put them into practice. The course is divided into three sections—instructing the individual; a group; and psycho-social factors that affect learning at any level. These sections are designed to enhance any intern’s, tutor’s, or TA’s teaching skillset. Class is discussion based, and covers theoretical and practical pedagogical aspects to teaching in STEM. An integral feature of the course involves providing weekly tutoring sessions.",https://www2.eecs.berkeley.edu/Courses/CS370,Database Seminar,CS 370,http://inst.eecs.berkeley.edu/~cs370
99," Advanced study in various subjects through seminars on topics to be selected each year, informal group studies of special problems, group participation in comprehensive design problems, or group research on complete problems for analysis and experimentation. ",https://www2.eecs.berkeley.edu/Courses/CS298_3143,Research Culture and Community Norms,CS 298,http://inst.eecs.berkeley.edu/~cs298
100," Advanced study in various subjects through seminars on topics to be selected each year, informal group studies of special problems, group participation in comprehensive design problems, or group research on complete problems for analysis and experimentation. ",https://www2.eecs.berkeley.edu/Courses/CS298_4248,"Group Studies Seminars, or Group Research",CS 298,http://inst.eecs.berkeley.edu/~cs298
101," Advanced study in various subjects through seminars on topics to be selected each year, informal group studies of special problems, group participation in comprehensive design problems, or group research on complete problems for analysis and experimentation. ",https://www2.eecs.berkeley.edu/Courses/CS298,Intro to Research in Quantum Computation,CS 298,http://inst.eecs.berkeley.edu/~cs298
102, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4585,Phase Transitions,CS 294,http://inst.eecs.berkeley.edu/~cs294
103, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4544,Pseudorandomness,CS 294,http://inst.eecs.berkeley.edu/~cs294
104, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_1902,Advanced topics in learning and decision making,CS 294,http://inst.eecs.berkeley.edu/~cs294
105, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4508,Design and Evaluation of Processes for Teaching Computer Science at Scale,CS 294,http://inst.eecs.berkeley.edu/~cs294
106, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4323,Algorithms and Inequality,CS 294,http://inst.eecs.berkeley.edu/~cs294
107, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4650,Machine Learning and Econ,CS 294,http://inst.eecs.berkeley.edu/~cs294
108, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4506,Special Topics on Decentralized Finance,CS 294,http://inst.eecs.berkeley.edu/~cs294
109, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4634,Privacy Preserving Systems,CS 294,http://inst.eecs.berkeley.edu/~cs294
110, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4181,Computational Color,CS 294,http://inst.eecs.berkeley.edu/~cs294
111, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_3733,Immersive Computing and Virtual Reality,CS 294,http://inst.eecs.berkeley.edu/~cs294
112, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4180,Special Topics,CS 294,http://inst.eecs.berkeley.edu/~cs294
113, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294,Experimental Design for Machine Learning on Multimedia Data,CS 294,http://inst.eecs.berkeley.edu/~cs294
114, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_3438,Vision and Language AI Seminar,CS 294,http://inst.eecs.berkeley.edu/~cs294
115, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4651,Intro to Computer Vision and Computational Photography,CS 294,http://inst.eecs.berkeley.edu/~cs294
116, Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4237,Introduction to Machine Learning,CS 294,http://inst.eecs.berkeley.edu/~cs294
117," This course provides an introduction to theoretical foundations, algorithms, and methodologies for machine learning, emphasizing the role of probability and optimization and exploring a variety of real-world applications. Students are expected to have a solid foundation in calculus and linear algebra as well as exposure to the basic tools of logic and probability, and should be familiar with at least one modern, high-level programming language. ",https://www2.eecs.berkeley.edu/Courses/CS289A,"Deep Reinforcement Learning, Decision Making, and Control",CS 289A,http://inst.eecs.berkeley.edu/~cs289a
118," Intersection of control, reinforcement learning, and deep learning. Deep learning methods, which train large parametric function approximators, achieve excellent results on problems that require reasoning about unstructured real-world situations (e.g., computer vision, speech recognition, NLP). Advanced treatment of the reinforcement learning formalism, the most critical model-free reinforcement learning algorithms (policy gradients, value function and Q-function learning, and actor-critic), a discussion of model-based reinforcement learning algorithms, an overview of imitation learning, and a range of advanced topics (e.g., exploration, model-based learning with video prediction, transfer learning, multi-task learning, and meta-learning).",https://www2.eecs.berkeley.edu/Courses/CS285,Statistical Learning Theory,CS 285,http://inst.eecs.berkeley.edu/~cs285
119," Classification regression, clustering, dimensionality, reduction, and density estimation. Mixture models, hierarchical models, factorial models, hidden Markov, and state space models, Markov properties, and recursive algorithms for general probabilistic inference nonparametric methods including decision trees, kernal methods, neural networks, and wavelets. Ensemble methods. ",https://www2.eecs.berkeley.edu/Courses/CSC281A,Implementation of Programming Languages,CS C281A,http://inst.eecs.berkeley.edu/~cs281a
120," Compiler construction. Lexical analysis, syntax analysis. Semantic analysis code generation and optimization. Storage management. Run-time organization. ",https://www2.eecs.berkeley.edu/Courses/CS264,Design of Programming Languages,CS 264,http://inst.eecs.berkeley.edu/~cs264
121," Selected topics from: analysis, comparison, and design of programming languages, formal description of syntax and semantics, advanced programming techniques, structured programming, debugging, verification of programs and compilers, and proofs of correctness. ",https://www2.eecs.berkeley.edu/Courses/CS263,Advanced Topics in Computer Systems,CS 263,http://inst.eecs.berkeley.edu/~cs263
122," Graduate survey of systems for managing computation and information, covering a breadth of topics: early systems; volatile memory management, including virtual memory and buffer management; persistent memory systems, including both file systems and transactional storage managers; storage metadata, physical vs. logical naming, schemas, process scheduling, threading and concurrency control; system support for networking, including remote procedure calls, transactional RPC, TCP, and active messages; security infrastructure; extensible systems and APIs; performance analysis and engineering of large software systems. Homework assignments, exam, and term paper or project required. ",https://www2.eecs.berkeley.edu/Courses/CS262A,Introduction to Digital Design and Integrated Circuits Lab,CS 262A,http://inst.eecs.berkeley.edu/~cs262a
123," An introduction to digital circuit and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs, and projects.",https://www2.eecs.berkeley.edu/Courses/EECS251A,Introduction to Embedded Systems,EECS 251A,http://inst.eecs.berkeley.edu/~eecs251a
124," This course introduces students to the basics of models, analysis tools, and control for embedded systems operating in real time. Students learn how to combine physical processes with computation. Topics include models of computation, control, analysis and verification, interfacing with the physical world, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects. ",https://www2.eecs.berkeley.edu/Courses/CSC249A,Optimization Models in Engineering,CS C249A,http://inst.eecs.berkeley.edu/~cs249a
125," This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS227AT,Statistical Signal Processing,EECS 227AT,http://inst.eecs.berkeley.edu/~eecs227at
126," This course connects classical statistical signal processing (Hilbert space filtering theory by Wiener and Kolmogorov, state space model, signal representation, detection and estimation, adaptive filtering) with modern statistical and machine learning theory and applications. It focuses on concrete algorithms and combines principled theoretical thinking with real applications.",https://www2.eecs.berkeley.edu/Courses/EECS225A,Computational Principles for High-dimensional Data Analysis,EECS 225A,http://inst.eecs.berkeley.edu/~eecs225a
127," This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECS206A,Supervised Independent Study,EECS 206A,http://inst.eecs.berkeley.edu/~eecs206a
128, Supervised independent study. Enrollment restrictions apply. ,https://www2.eecs.berkeley.edu/Courses/CS199,UCBUGG: 3D Modeling and Animation,CS 199,http://inst.eecs.berkeley.edu/~cs199
129," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3164,Introduction to Algorithmic Thinking,CS 198,http://inst.eecs.berkeley.edu/~cs198
130," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4643,Algorithmic Fairness and the Genome  (2 hour version),CS 198,http://inst.eecs.berkeley.edu/~cs198
131," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4624,Algorithmic Fairness and the Genome  (1 hour version),CS 198,http://inst.eecs.berkeley.edu/~cs198
132," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4623,Recommendation Systems in Machine Learning DeCal,CS 198,http://inst.eecs.berkeley.edu/~cs198
133," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4622,Digital Privacy,CS 198,http://inst.eecs.berkeley.edu/~cs198
134," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4617,Robot Autonomous Racing DeCal,CS 198,http://inst.eecs.berkeley.edu/~cs198
135," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4621,ANova DeCal,CS 198,http://inst.eecs.berkeley.edu/~cs198
136," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4277,Cloud Computing and SaaS,CS 198,http://inst.eecs.berkeley.edu/~cs198
137," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4290,Going Down the EECS Stack DeCal,CS 198,http://inst.eecs.berkeley.edu/~cs198
138," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3052,Web Design DeCal,CS 198,http://inst.eecs.berkeley.edu/~cs198
139," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_2940,Linux System Administration DeCal,CS 198,http://inst.eecs.berkeley.edu/~cs198
140," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3339,UCBUGG: 3D Modeling and Animation,CS 198,http://inst.eecs.berkeley.edu/~cs198
141," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3164,Directed Group Studies for Advanced Undergraduates,CS 198,http://inst.eecs.berkeley.edu/~cs198
142," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198,iOS DeCal,CS 198,http://inst.eecs.berkeley.edu/~cs198
143," Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_2872,Senior Honors Thesis Research,CS 198,http://inst.eecs.berkeley.edu/~cs198
144," Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may not be used to satisfy the requirement for 27 upper division technical units in the College of Letters and Science with a major in Computer Science. ",https://www2.eecs.berkeley.edu/Courses/CSH196A,Senior Honors Thesis Research,CS H196A,http://inst.eecs.berkeley.edu/~cs196a
145," Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may not be used to satisfy the requirement for 27 upper division technical units in the College of Letters and Science with a major in Computer Science. ",https://www2.eecs.berkeley.edu/Courses/CSH196A,Social Implications of Computer Technology,CS H196A,http://inst.eecs.berkeley.edu/~cs196a
146, Topics include electronic community; the changing nature of work; technological risks; the information economy; intellectual property; privacy; artificial intelligence and the sense of self; pornography and censorship; professional ethics. Students will lead discussions on additional topics. ,https://www2.eecs.berkeley.edu/Courses/CS195,Special Topics on Decentralized Finance,CS 195,http://inst.eecs.berkeley.edu/~cs195
147, Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4634,Computational Genomics,CS 194,http://inst.eecs.berkeley.edu/~cs194
148, Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4584,EECS for All: Social Justice in EECS,CS 194,http://inst.eecs.berkeley.edu/~cs194
149, Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4431,Intro to Computer Vision and Computational Photography,CS 194,http://inst.eecs.berkeley.edu/~cs194
150, Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4237,Parallel Programming,CS 194,"https://inst.eecs.berkeley.edu/~cs194-26/,http://inst.eecs.berkeley.edu/~cs194"
151, Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4178,Quantum Information Science and Technology,CS 194,"https://inst.eecs.berkeley.edu/~cs194-15,http://inst.eecs.berkeley.edu/~cs194"
152," This multidisciplinary course provides an introduction to fundamental conceptual aspects of quantum mechanics from a computational and informational theoretic perspective, as well as physical implementations and technological applications of quantum information science. Basic sections of quantum algorithms, complexity, and cryptography, will be touched upon, as well as pertinent physical realizations from nanoscale science and engineering. ",https://www2.eecs.berkeley.edu/Courses/CSC191,Introduction to Machine Learning,CS C191,http://inst.eecs.berkeley.edu/~cs191
153," Theoretical foundations, algorithms, methodologies, and applications for machine learning. Topics may include supervised methods for regression and classication (linear models, trees, neural networks, ensemble methods, instance-based methods); generative and discriminative probabilistic models; Bayesian parametric learning; density estimation and clustering; Bayesian networks; time series models; dimensionality reduction; programming projects covering a variety of real-world applications. ",https://www2.eecs.berkeley.edu/Courses/CS189,Introduction to Artificial Intelligence,CS 189,http://inst.eecs.berkeley.edu/~cs189
154," Ideas and techniques underlying the design of intelligent computer systems. Topics include search, game playing, knowledge representation, inference, planning, reasoning under uncertainty, machine learning, robotics, perception, and language understanding.",https://www2.eecs.berkeley.edu/Courses/CS188,Introduction to Database Systems,CS 188,http://inst.eecs.berkeley.edu/~cs188
155," Broad introduction to systems for storing, querying, updating and managing large databases. Computer science skills synthesizing viewpoints from low-level systems architecture to high-level modeling and declarative logic. System internals, including the complex details of query optimization and execution, concurrency control, indexing, and memory management.  More abstract issues in query languages and data modeling – students are exposed to formal relational languages, SQL, full-text search, entity-relationship modeling, normalization, and physical database design. Recent technological trends in the field, including “Big Data” programming libraries like MapReduce, and distributed key-value stores with various consistency models.",https://www2.eecs.berkeley.edu/Courses/CSW186,Efficient Algorithms and Intractable Problems,CS W186,http://inst.eecs.berkeley.edu/~cs186
156," Concept and basic techniques in the design and analysis of algorithms; models of computation; lower bounds; algorithms for optimum search trees, balanced trees and UNION-FIND algorithms; numerical and algebraic algorithms; combinatorial algorithms. Turing machines, how to count steps, deterministic and nondeterministic Turing machines, NP-completeness. Unsolvable and intractable problems. ",https://www2.eecs.berkeley.edu/Courses/CS170,Introduction to Software Engineering,CS 170,http://inst.eecs.berkeley.edu/~cs170
157," Ideas and techniques for designing, developing, and modifying large software systems. Service-oriented architecture, behavior-driven design with user stories, cloud computing, test-driven development, automated testing, cost and quality metrics for maintainability and effort estimation, practical performance and security in software operations, design patterns and refactoring, specification and documentation, agile project team organization and management.",https://www2.eecs.berkeley.edu/Courses/CS169A,Programming Languages and Compilers,CS 169A,http://inst.eecs.berkeley.edu/~cs169a
158," Survey of programming languages. The design of modern programming languages. Principles and techniques of scanning, parsing, semantic analysis, and code generation. Implementation of compilers, interpreters, and assemblers. Overview of run-time organization and error handling. ",https://www2.eecs.berkeley.edu/Courses/CS164,Operating Systems and System Programming,CS 164,http://inst.eecs.berkeley.edu/~cs164
159," Basic concepts of operating systems and system programming. Utility programs, subsystems, multiple-program systems. Processes, interprocess communication, and synchronization. Memory allocation, segmentation, paging. Loading and linking, libraries. Resource allocation, scheduling, performance evaluation. File systems, storage devices, I/O systems. Protection, security, and privacy. ",https://www2.eecs.berkeley.edu/Courses/CS162,Computer Security,CS 162,http://inst.eecs.berkeley.edu/~cs162
160," Introduction to computer security. Cryptography, including encryption, authentication, hash functions, cryptographic protocols, and applications. Operating system security, access control. Network security, firewalls, viruses, and worms. Software security, defensive programming, and language-based security. Case studies from real-world systems. ",https://www2.eecs.berkeley.edu/Courses/CS161,Introduction to Digital Design and Integrated Circuits Lab,CS 161,http://inst.eecs.berkeley.edu/~cs161
161," This course introduces students to the basics of modeling, analysis, and design of embedded, cyber-physical systems. Students learn how to integrate computation with physical processes to meet a desired specification. Topics include models of computation, control, analysis and verification, interfacing with the physical world, real-time behaviors, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects.",https://www2.eecs.berkeley.edu/Courses/EECS149,Optimization Models in Engineering,EECS 149,http://inst.eecs.berkeley.edu/~eecs149
162," This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains. ",https://www2.eecs.berkeley.edu/Courses/EECS126,Introduction to Robotics,EECS 126,http://inst.eecs.berkeley.edu/~eecs126
163," This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECSC106A,Principles & Techniques of Data Science,EECS C106A,http://inst.eecs.berkeley.edu/~eecs106a
164," In this course, students will explore the data science lifecycle, including question formulation, data collection and cleaning, exploratory data analysis and visualization, statistical inference and prediction​, and decision-making.​ This class will focus on quantitative critical thinking​ and key principles and techniques needed to carry out this cycle. These include languages for transforming, querying and analyzing data; algorithms for machine learning methods including regression, classification and clustering; principles behind creating informative data visualizations; statistical concepts of measurement error and prediction; and techniques for scalable data processing.",https://www2.eecs.berkeley.edu/Courses/CSC100,Computational Structures in Data Science,CS C100,http://inst.eecs.berkeley.edu/~cs100
165," Development of Computer Science topics appearing in Foundations of Data Science (C8); expands computational concepts and techniques of abstraction. Understanding  the structures that underlie the programs, algorithms, and languages used in data science and elsewhere.   Mastery of a particular programming language while studying general techniques for managing program complexity, e.g., functional, object-oriented, and declarative programming. Provides practical experience with composing larger systems through several significant programming projects.",https://www2.eecs.berkeley.edu/Courses/CS88,Discrete Mathematics and Probability Theory,CS 88,http://inst.eecs.berkeley.edu/~cs88
166," Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples include load balancing, existence arguments, Bayesian inference. ",https://www2.eecs.berkeley.edu/Courses/CS70,Machine Structures,CS 70,http://inst.eecs.berkeley.edu/~cs70
167," The internal organization and operation of digital computers. Machine architecture, support for high-level languages (logic, arithmetic, instruction sequencing) and operating systems (I/O, interrupts, memory management, process switching). Elements of computer logic design. Tradeoffs involved in fundamental architectural design decisions. ",https://www2.eecs.berkeley.edu/Courses/CS61C,Data Structures,CS 61C,http://inst.eecs.berkeley.edu/~cs61c
168,,https://www.csd.cs.cmu.edu/course-profiles/15-351-Algorithms-and-Advanced-Data-Structures,Algorithms and Advanced Data Structures,15-351,http://www.cs.cmu.edu/~jianma/15351/index.html
169,,https://www.csd.cs.cmu.edu/course-profiles/15-451-Algorithm-Design-and-Analysis,Algorithm Design and Analysis,15-651,"https://www.cs.cmu.edu/~15451/,https://www.cs.cmu.edu/~15451/"
170,,https://www.csd.cs.cmu.edu/course-profiles/15-445_645-Database-Systems,Database Systems,15-645,http://15445.courses.cs.cmu.edu/
171,,http://www.csd.cs.cmu.edu/course-profiles/15-317-Constructive-Logic,Constructive Logic,15-317,http://www.cs.cmu.edu/~fp/courses/15317-f17/
172,,https://www.csd.cs.cmu.edu/course-profiles/15-458-Discrete-Differential-Geometry,Discrete Differential Geometry,15-458,http://geometry.cs.cmu.edu/ddg
173,,https://www.csd.cs.cmu.edu/course-profiles/15-451-Algorithm-Design-and-Analysis,Algorithm Design and Analysis,15-451,"https://www.cs.cmu.edu/~15451/,https://www.cs.cmu.edu/~15451/"
174,,https://www.csd.cs.cmu.edu/course-profiles/15-445_645-Database-Systems,Database Systems,15-445,http://15445.courses.cs.cmu.edu/
175,,https://www.csd.cs.cmu.edu/course-profiles/15-252-More-Great-Theoretical-Ideas-in-Computer-Science,More Great Ideas in Theoretical Computer Science,15-252,https://www.cs.cmu.edu/~15251/252.html
176,,https://www.csd.cs.cmu.edu/course-profiles/15-251-Great-Theoretical-Ideas-in-Computer-Science,Great Theoretical Ideas in Computer Science,15-251,"http://www.cs.cmu.edu/~15251/policy.html,http://www.cs.cmu.edu/~15251/"
177,,http://csd.cs.cmu.edu/course-profiles/15-394-Intermediate-Rapid-Prototyping,Intermediate Rapid Prototyping,15-394,http://www.cs.cmu.edu/afs/cs/academic/class/15394u-s17/
178,,http://csd.cs.cmu.edu/course-profiles/15-319-619-Cloud-Computing,Cloud Computing,15-319,http://www.cs.cmu.edu/~msakr/15619-s17/
179,,http://csd.cs.cmu.edu/course-profiles/15-348-Embedded-Systems,Embedded Systems,15-348,https://web2.qatar.cmu.edu/~srazak/courses/15348-s17/index.html
180,,http://csd.cs.cmu.edu/course-profiles/15-313-Foundations-of-Software-Engineering,Foundations of Software Engineering,15-313,"https://www.cs.cmu.edu/~ckaestne/15313/,https://www.cs.cmu.edu/~ckaestne/15313/"
181,,http://csd.cs.cmu.edu/course-profiles/15-319-619-Cloud-Computing,Cloud Computing,15-619,http://www.cs.cmu.edu/~msakr/15619-s17/
182,,http://csd.cs.cmu.edu/course-profiles/15-213-Introduction-to-Computer-Systems,Introduction to Computer Systems,15-513,https://www.cs.cmu.edu/~213/
183,,https://csd.cs.cmu.edu/course-profiles/15-122-principles-imperative-computation,Principles of Imperative Computation,15-122,http://www.cs.cmu.edu/~15122/home.shtml
184,,http://csd.cs.cmu.edu/course-profiles/15-213-Introduction-to-Computer-Systems,Introduction to Computer Systems,15-213,https://www.cs.cmu.edu/~213/
185,,http://csd.cs.cmu.edu/course-profiles/15-151-Mathematical-Foundations-for-Computer-Science,Mathematical Foundations for Computer Science,15-151,http://www.math.cmu.edu/~jmackey/151_128/welcome.html
186,,http://csd.cs.cmu.edu/content/15-131-great-practical-ideas-computer-scientists,Great Practical Ideas for Computer Scientists,15-131,https://www.cs.cmu.edu/~15131/
187,,http://csd.cs.cmu.edu/course-profiles/15-121-Introduction-to-Data-Structures,Introduction to Data Structures,15-121,"http://www.cs.cmu.edu/~mjs/121/,http://www.cs.cmu.edu/~mjs/121/"
188,,http://csd.cs.cmu.edu/course-profiles/15-104-Introduction-to-Computing-for-Creative-Practice,Introduction to Computing for Creative Practice,15-104,https://courses.ideate.cmu.edu/15-104/f2016/
189,,, Fundamental Programming Concepts,1109,https://classes.cornell.edu/browse/roster/SU20/class/CS/1109
190,,, Introduction to Computing Using Python,1110,https://classes.cornell.edu/browse/roster/SP22/class/CS/1110
191,,, Introduction to Computing Using MATLAB,1112,http://www.cs.cornell.edu/courses/CS1112/2021sp/
192,,, Short Course in MATLAB,1132,http://www.cs.cornell.edu/courses/CS1132/2021sp/
193,,, Short Course in Python,1133,https://classes.cornell.edu/browse/roster/SP22/class/CS/1133
194,,, Introductory Design and Programming for the Web,1300,https://classes.cornell.edu/browse/roster/SP22/class/CS/1300
195,,, Choices and Consequences in Computing,1340,http://www.cs.cornell.edu/courses/CS1340/2021sp/
196,,, Data Science for All,1380,http://www.cs.cornell.edu/courses/CS1380/2020sp/
197,,, Computing in the Arts,1610,https://classes.cornell.edu/browse/roster/SU21/class/CS/1610
198,,, Visual Imaging in the Electronic Age,1620,https://www.graphics.cornell.edu/sites/default/files/inline-files/Revised%20Visual%20Imaging%20Web%20Article%204.2_0.pdf
199,,, Introduction to Cognitive Science,1710,https://classes.cornell.edu/browse/roster/SP22/class/CS/1710
200,,, Freshmen and Nontechnical Team Projects,1998,https://classes.cornell.edu/browse/roster/SP22/class/CS/1998
201,,, C++ Programming,2024,http://www.cs.cornell.edu/courses/CS2024/2019fa/
202,,, UNIX Tools and Scripting,2043,http://www.cs.cornell.edu/courses/CS2043/2020sp/
203,,, Object-Oriented Programming and Data Structures,2110,https://classes.cornell.edu/browse/roster/SP22/class/CS/2110
204,,, Programming Practicum,2111,http://www.cs.cornell.edu/courses/CS2111/2021sp/
205,,, Object-Oriented Design and Data Structures - Honors,2112,http://www.cs.cornell.edu/courses/CS2112/2019fa/
206,,, Intermediate Design and Programming for the Web,2300,http://www.cs.cornell.edu/courses/CS2300/2020sp/
207,,, Urban Analytics,2382,https://classes.cornell.edu/browse/roster/FA20/class/CS/2382
208,,, Excursions in Computational Sustainability,2770,https://classes.cornell.edu/browse/roster/SP21/class/CS/2770
209,,, Discrete Structures,2800,https://classes.cornell.edu/browse/roster/SP22/class/CS/2800
210,,, Discrete Structures - Honors,2802,http://www.cs.cornell.edu/courses/CS2802/2019sp/
211,,, Networks,2850,http://www.cs.cornell.edu/courses/CS2850/2019fa/
212,,, Data Structures and Functional Programming,3110,http://www.cs.cornell.edu/courses/CS3110/2021sp/
213,,, Introduction to Computer Game Architecture,3152,http://www.cs.cornell.edu/courses/CS3152/2020sp/
214,,, Computational Mathematics for Computer Science,3220,http://www.cs.cornell.edu/courses/CS3220/2019fa/
215,,, Data-Driven Web Applications,3300,http://www.cs.cornell.edu/courses/CS3300/2020sp/
216,,, Computer System Organization and Programming,3410,http://www.cs.cornell.edu/courses/CS3410/2021sp/
217,,, Embedded Systems,3420,https://classes.cornell.edu/browse/roster/SP22/class/CS/3420
218,,, Autonomous Mobile Robots,3758,https://classes.cornell.edu/browse/roster/SP22/class/CS/3758
219,,, Teaching Experience in Computer Science,4090,https://classes.cornell.edu/browse/roster/SP22/class/CS/4090
220,,, Programming Languages and Logics,4110,http://www.cs.cornell.edu/courses/CS4110/2018fa/
221,,, Introduction to Compilers,4120,http://www.cs.cornell.edu/courses/CS4120/2020sp/
222,,, Practicum in Compilers,4121,http://www.cs.cornell.edu/courses/CS4121/2020sp/
223,,, Advanced Topics in Computer Game Architecture,4152,http://www.cs.cornell.edu/courses/CS4152/2020sp/
224,,, Formal Verification,4160,http://www.cs.cornell.edu/courses/CS4160/2019sp/
225,,, Numerical Analysis and Differential Equations,4210,https://classes.cornell.edu/browse/roster/FA21/class/CS/4210
226,,, Numerical Analysis,4220,http://www.cs.cornell.edu/courses/CS4220/2021sp/
227,,, Language and Information,4300,http://www.cs.cornell.edu/courses/CS4300/2020sp/
228,,, Introduction to Database Systems,4320,http://www.cs.cornell.edu/courses/CS4320/2019fa/
229,,, Practicum in Database Systems,4321,http://www.cs.cornell.edu/courses/CS4321/2018fa/
230,,, Operating Systems,4410,http://www.cs.cornell.edu/courses/CS4410/2021sp/
231,,, Practicum in Operating Systems,4411,http://www.cs.cornell.edu/courses/CS4411/2021sp/
232,,, Systems Programming,4414,http://www.cs.cornell.edu/courses/cs4414/2020fa/
233,,, Computer Architecture,4420,http://www.cs.cornell.edu/courses/CS4420/2019fa/
234,,, Introduction to Computer Networks,4450,http://www.cs.cornell.edu/courses/CS4450/2019sp/
235,,, Introduction to Computer Graphics,4620,http://www.cs.cornell.edu/courses/CS4620/2019fa/
236,,, Computer Graphics Practicum,4621,http://www.cs.cornell.edu/courses/CS4621/2019fa/
237,,, Introduction to Computer Vision,4670,http://www.cs.cornell.edu/courses/CS4670/2020sp/
238,,, Foundations of Artificial Intelligence,4700,http://www.cs.cornell.edu/courses/CS4700/2021sp/
239,,, Practicum in Artificial Intelligence,4701,http://www.cs.cornell.edu/courses/CS4701/2021sp/
240,,, Natural Language Processing,4740,http://www.cs.cornell.edu/courses/CS4740/2019fa/
241,,, Computational Linguistics,4744,https://classes.cornell.edu/browse/roster/SP22/class/CS/4744
242,,, Foundations of Robotics,4750,http://www.cs.cornell.edu/courses/CS4750/2018fa/
243,,, Re-Designing Robots,4754,https://classes.cornell.edu/browse/roster/FA21/class/CS/4754
244,,, Autonomous Mobile Robots,4758,https://classes.cornell.edu/browse/roster/SP22/class/CS/4758
245,,, Computational Genetics and Genomics,4775,https://classes.cornell.edu/browse/roster/FA20/class/CS/4775
246,,, Introduction to Machine Learning,4780,http://www.cs.cornell.edu/courses/CS4780/2021sp/
247,,, Mathematical Foundations of Machine Learning,4783,https://classes.cornell.edu/browse/roster/SP22/class/CS/4783
248,,, Machine Learning for Data Science,4786,http://www.cs.cornell.edu/courses/CS4786/2017fa/
249,,, Principles of Large-Scale Machine Learning Systems,4787,http://www.cs.cornell.edu/courses/CS4787/2019sp/
250,,, Introduction to Reinforcement Learning,4789,https://classes.cornell.edu/browse/roster/SP22/class/CS/4789
251,,, Introduction to Theory of Computing,4810,http://www.cs.cornell.edu/courses/CS4810/2018fa/
252,,, Quantum Information Processing,4812,http://www.cs.cornell.edu/courses/CS4812/2018fa/
253,,, Introduction to Computational Complexity,4814,http://www.cs.cornell.edu/courses/CS4814/2020sp/
254,,, Introduction to Analysis of Algorithms,4820,https://classes.cornell.edu/browse/roster/SP22/class/CS/4820
255,,, Introduction to Cryptography,4830,https://cs4830-sp17.jimdo.com/
256,,, Mathematical Foundations for the Information Age,4850,http://www.cs.cornell.edu/courses/CS4850/2019sp/
257,,, Networks II,4852,https://classes.cornell.edu/browse/roster/SP22/class/CS/4852
258,,, Applied Logic,4860,http://www.cs.cornell.edu/courses/CS4860/2019fa/
259,,, International Research Internship,4990,https://classes.cornell.edu/browse/roster/SP21/class/CS/4990
260,,, Practical Training in Computer Science,4997,https://classes.cornell.edu/browse/roster/SP22/class/CS/4997
261,,, Team Projects,4998,https://classes.cornell.edu/browse/roster/SP22/class/CS/4998
262,,, Independent Reading and Research,4999,https://classes.cornell.edu/browse/roster/SP22/class/CS/4999
263,,," Introduction to Blockchains, Cryptocurrencies, and Smart Contracts",5094,https://classes.cornell.edu/browse/roster/SP18/class/CS/5094
264,,, Programming Languages and Logics,5110,https://www.cs.cornell.edu/courses/cs4110/2018fa/
265,,, Algorithms and Data Structures for Applications,5112,http://www.cs.cornell.edu/courses/CS5112/2020fa/
266,,, Software-Defined Networking,5114,http://www.cs.cornell.edu/courses/CS5114/2019fa/
267,,, Introduction to Compilers,5120,http://www.cs.cornell.edu/courses/CS5120/2020sp/
268,,, Practicum in Compilers,5121,http://www.cs.cornell.edu/courses/CS5121/2020sp/
269,,, Computational Integer Programming,5135,https://classes.cornell.edu/browse/roster/SP22/class/CS/5135
270,,, Software Engineering,5150,http://www.cs.cornell.edu/courses/CS5150/2019sp/
271,,, Advanced Topics in Computer Game Architecture,5152,http://www.cs.cornell.edu/courses/CS5152/2019sp/
272,,, Software Testing,5154,http://www.cs.cornell.edu/courses/CS5154/2021sp/
273,,, Formal Verification,5160,https://classes.cornell.edu/browse/roster/SP22/class/CS/5160
274,,, Competition Programming and Problem Solving Seminar,5199,http://www.cs.cornell.edu/courses/CS5199/2019sp/
275,,, Applications of Parallel Computers,5220,http://www.cs.cornell.edu/courses/CS5220/2017fa/
276,,, Numerical Analysis,5223,https://classes.cornell.edu/browse/roster/SP22/class/CS/5223
277,,, Data Science in the Wild,5304,https://classes.cornell.edu/browse/roster/SP22/class/CS/5304
278,,, Crowdsourcing and Human Computation,5306,http://www.cs.cornell.edu/courses/CS5306/2018fa/
279,,, Introduction to Database Systems,5320,http://www.cs.cornell.edu/courses/CS5320/2019fa/
280,,, Practicum in Database Systems,5321,http://www.cs.cornell.edu/courses/cs4321/2018fa/
281,,, Building Startup Systems,5356,https://classes.cornell.edu/browse/roster/SP22/class/CS/5356
282,,, Operating Systems,5410,http://www.cs.cornell.edu/courses/CS5410/2021fa/
283,,, Practicum in Operating Systems,5411,http://www.cs.cornell.edu/courses/CS5411/2021fa/
284,,, Cloud Computing,5412,http://www.cs.cornell.edu/courses/CS5412/2021sp/
285,,, Distributed Computing Principles,5414,http://www.cs.cornell.edu/courses/CS5414/2018fa/
286,,, Advanced Computer Architecture,5420,https://classes.cornell.edu/browse/roster/FA21/class/CS/5420
287,,, Developing and Designing Interactive Devices,5424,https://classes.cornell.edu/browse/roster/FA21/class/CS/5424
288,,, System Security,5430,http://www.cs.cornell.edu/courses/CS5430/2020sp/
289,,, Practicum in System Security,5431,http://www.cs.cornell.edu/courses/CS5431/2017sp/
290,,, Advanced System Security,5432,http://www.cs.cornell.edu/courses/CS5432/2021sp/
291,,," Blockchains, Cryptocurrencies, and Smart Contracts",5433,https://classes.cornell.edu/browse/roster/SP22/class/CS/5433
292,,, Security and Privacy Concepts in the Wild,5435,https://classes.cornell.edu/browse/roster/FA21/class/CS/5435
293,,, Privacy in the Digital Age,5436,https://classes.cornell.edu/browse/roster/SP22/class/CS/5436
294,,, Practicum in Computer Security,5439,https://github.com/cornelltech/CS5439-Fall2018
295,,, Networked and Distributed Systems,5450,https://classes.cornell.edu/browse/roster/SP20/class/CS/5450
296,,, Introduction to Computer Graphics,5620,http://www.cs.cornell.edu/courses/CS5620/2019fa/
297,,, Computer Graphics Practicum,5621,http://www.cs.cornell.edu/courses/CS5621/2019fa/
298,,, Interactive Computer Graphics,5625,http://www.cs.cornell.edu/courses/CS5625/2020sp/
299,,, Virtual and Augmented Reality,5650,https://classes.cornell.edu/browse/roster/FA21/class/CS/5650
300,,, Signal Processing,5660,https://classes.cornell.edu/browse/roster/FA16/class/CS/5660
301,,, Introduction to Computer Vision,5670,http://www.cs.cornell.edu/courses/CS5670/2021sp/
302,,, Topics in Mixed Reality,5678,https://classes.cornell.edu/browse/roster/SP22/class/CS/5678
303,,, HCI and Design,5682,http://www.cs.cornell.edu/courses/CS5682/2019fa/
304,,, Foundations of Artificial Intelligence,5700,http://www.cs.cornell.edu/courses/CS5700/2021fa/
305,,, Practicum in Artificial Intelligence,5701,https://classes.cornell.edu/browse/roster/FA21/class/CS/5701
306,,, Inference and Decision Making,5726,https://classes.cornell.edu/browse/roster/SP22/class/CS/5726
307,,, Optimization Methods,5727,https://classes.cornell.edu/browse/roster/FA21/class/CS/5727
308,,, Natural Language Processing,5740,http://www.cs.cornell.edu/courses/CS5740/2021sp/
309,,, Foundations of Robotics,5750,http://www.cs.cornell.edu/courses/CS5750/2017fa/
310,,, Autonomous Mobile Robots,5758,https://classes.cornell.edu/browse/roster/SP22/class/CS/5758
311,,, Introduction to Machine Learning,5780,http://www.cs.cornell.edu/courses/CS5780/2021sp/
312,,, Machine Learning Engineering,5781,https://classes.cornell.edu/browse/roster/FA21/class/CS/5781
313,,, Mathematical Foundations of Machine Learning,5783,https://classes.cornell.edu/browse/roster/SP22/class/CS/5783
314,,, Applied Machine Learning,5785,https://classes.cornell.edu/browse/roster/FA21/class/CS/5785
315,,, Machine Learning for Data Science,5786,https://classes.cornell.edu/browse/roster/SP20/class/CS/5786
316,,, Deep Learning,5787,https://classes.cornell.edu/browse/roster/SP22/class/CS/5787
317,,, Introduction to Reinforcement Learning,5789,https://classes.cornell.edu/browse/roster/SP22/class/CS/5789
318,,, Introduction to Analysis of Algorithms,5820,https://classes.cornell.edu/browse/roster/SP22/class/CS/5820
319,,, Cryptography,5830,https://classes.cornell.edu/browse/roster/SP22/class/CS/5830
320,,, Security Protocols and Privacy,5831,
321,,, Decision Theory I,5846,http://www.cs.cornell.edu/courses/CS5846/2017sp/
322,,, Mathematical Foundations for the Information Age,5850,https://classes.cornell.edu/browse/roster/SP22/class/CS/5850
323,,, Networks and Markets,5854,https://classes.cornell.edu/browse/roster/SP21/class/CS/5854
324,,, Master of Engineering Internship,5998,https://classes.cornell.edu/browse/roster/SP22/class/CS/5998
325,,, Master of Engineering Project,5999,https://classes.cornell.edu/browse/roster/SP22/class/CS/5999
326,,, Advanced Programming Languages,6110,http://www.cs.cornell.edu/courses/CS6110/2021sp/
327,,, Language-Based Security,6113,http://www.cs.cornell.edu/courses/CS6113/2018fa/
328,,, Software-Defined Networking,6114,http://www.cs.cornell.edu/courses/CS6114/2019fa/
329,,, Certified Software Systems,6115,http://www.cs.cornell.edu/courses/CS6115/2017fa/
330,,, Category Theory for Computer Scientists,6117,http://www.cs.cornell.edu/courses/CS6117/2018sp/
331,,, Advanced Compilers,6120,http://www.cs.cornell.edu/courses/CS6120/2019fa/
332,,, Runtime Verification,6156,http://www.cs.cornell.edu/courses/CS6156/2020fa/
333,,, Program Synthesis,6172,https://classes.cornell.edu/browse/roster/FA21/class/CS/6172
334,,, Introduction to Constructive Type Theory,6180,http://www.cs.cornell.edu/courses/CS6180/2017fa/
335,,, Foundations of Probabilistic Programming,6182,http://www.cs.cornell.edu/courses/CS6182/2021fa/
336,,, Matrix Computations,6210,http://www.cs.cornell.edu/courses/CS6210/2019fa/
337,,, Data-Sparse Matrix Computations,6220,http://www.cs.cornell.edu/courses/CS6220/2017fa/
338,,, Numerical Methods for Data Science,6241,http://www.cs.cornell.edu/courses/CS6241/2019sp/
339,,, Advanced Database Systems,6320,http://www.cs.cornell.edu/courses/CS6320/2019sp/
340,,, Educational Technology,6360,http://www.cs.cornell.edu/courses/CS6360/2016fa/
341,,, Data Science for Social Change,6382,https://classes.cornell.edu/browse/roster/SP22/class/CS/6382
342,,, Advanced Systems,6410,http://www.cs.cornell.edu/courses/CS6410/2019fa/
343,,, Systems Principles,6411,http://www.cs.cornell.edu/courses/CS6411/2018sp/
344,,, Security and Privacy Technologies,6431,https://classes.cornell.edu/browse/roster/FA21/class/CS/6431
345,,, Advanced Computer Networking,6450,http://www.cs.cornell.edu/courses/CS6450/2018fa/
346,,, Emerging Cloud Technologies and Systems Challenges,6465,http://www.cs.cornell.edu/courses/CS6465/2017fa/
347,,, Cryptocurrencies and Smart Contracts,6466,http://www.cs.cornell.edu/courses/CS6466/2018sp/
348,,, Systems Software and Formal Methods,6480,http://www.cs.cornell.edu/courses/CS6480/2020sp/
349,,, Computer Vision,6670,http://www.cs.cornell.edu/courses/CS6670/2018fa/
350,,, Computation for Content Creation,6682,http://www.cs.cornell.edu/courses/CS6682/2021sp/
351,,, Advanced Artificial Intelligence,6700,https://classes.cornell.edu/browse/roster/SP21/class/CS/6700
352,,, Advanced Language Technologies,6740,http://www.cs.cornell.edu/courses/CS6740/2019fa/
353,,, Topics in Natural Language Processing and Machine Learning,6741,http://www.cs.cornell.edu/courses/CS6741/2021fa/
354,,, Natural Language Processing and Social Interaction,6742,http://www.cs.cornell.edu/courses/CS6742/2018fa/
355,,, Robot Manipulation,6751,https://classes.cornell.edu/browse/roster/SP22/class/CS/6751
356,,, Formal Methods for Robotics,6752,https://classes.cornell.edu/browse/roster/FA21/class/CS/6752
357,,, Reasoning about Knowledge,6764,http://www.cs.cornell.edu/courses/CS6764/2018fa/
358,,, Advanced Machine Learning,6780,http://www.cs.cornell.edu/courses/CS6780/2019sp/
359,,, Theoretical Foundations of Machine Learning,6781,http://www.cs.cornell.edu/courses/CS6781/2020sp/
360,,, Machine Learning Theory,6783,http://www.cs.cornell.edu/courses/CS6783/2018fa/
361,,, Advanced Topics in Machine Learning,6784,https://classes.cornell.edu/browse/roster/SP22/class/CS/6784
362,,, Deep Probabilistic and Generative Models,6785,https://classes.cornell.edu/browse/roster/SP22/class/CS/6785
363,,, Advanced Machine Learning Systems,6787,http://www.cs.cornell.edu/courses/CS6787/2019fa/
364,,, Advanced Topic Modeling,6788,https://mimno.infosci.cornell.edu/info6150/
365,,, Foundations of Reinforcement Learning,6789,https://classes.cornell.edu/browse/roster/FA21/class/CS/6789
366,,, Lattices,6802,https://classes.cornell.edu/browse/roster/FA21/class/CS/6802
367,,, Theory of Computing,6810,http://www.cs.cornell.edu/courses/CS6810/2017sp/
368,,, Pseudorandomness and Combinatorial Constructions,6815,http://www.cs.cornell.edu/courses/CS6815/2018fa/
369,,, Special Topics in Complexity Theory,6817,http://www.cs.cornell.edu/courses/CS6817/2020fa/
370,,, Analysis of Algorithms,6820,http://www.cs.cornell.edu/courses/CS6820/2020fa/
371,,, Algorithmic Game Theory,6840,http://www.cs.cornell.edu/courses/CS6840/2017sp/
372,,, The Structure of Information Networks,6850,http://www.cs.cornell.edu/courses/CS6850/2017sp/
373,,, Logics of Programs,6860,http://www.cs.cornell.edu/courses/CS6860/2019sp/
374,,, Introduction to Kleene Algebra,6861,http://www.cs.cornell.edu/courses/CS6861/2018sp/
375,,, Computer Science Colloquium,7090,http://www.cs.cornell.edu/courses/CS7090/2021sp/
376,,, Seminar in Programming Languages,7190,http://www.cs.cornell.edu/courses/CS7190/2021sp/
377,,, Great Works in Programming Languages,7194,http://www.cs.cornell.edu/courses/CS7194/2019sp/
378,,, Seminar on Scientific Computing and Numerics,7290,http://www.cs.cornell.edu/courses/CS7290/2021sp/
379,,, Database Seminar,7390,http://www.cs.cornell.edu/courses/CS7390/2020fa/
380,,, Special Topics in Computer Systems,7420,https://classes.cornell.edu/browse/roster/SP22/class/CS/7420
381,,, Computer Networks a Decade from Now,7450,https://classes.cornell.edu/browse/roster/FA20/class/CS/7450
382,,, Systems Research Seminar,7490,http://www.cs.cornell.edu/courses/CS7490/2021sp/
383,,, The Great Instruction Set Architectures,7491,http://www.cs.cornell.edu/courses/CS7491/2020sp/
384,,, Special Topics in Computer Systems,7492,https://classes.cornell.edu/browse/roster/FA20/class/CS/7492
385,,, Computer Security Seminar,7493,https://classes.cornell.edu/browse/roster/FA21/class/CS/7493
386,,, Special Topics in Computer Graphics,7620,https://classes.cornell.edu/browse/roster/FA21/class/CS/7620
387,,, Computer Graphics and Vision Seminar,7690,http://www.cs.cornell.edu/courses/CS7690/2021sp/
388,,, Special Topics in Natural Language Processing,7740,https://classes.cornell.edu/browse/roster/SP20/class/CS/7740
389,,, Seminar in Artificial Intelligence,7790,http://www.cs.cornell.edu/courses/CS7790/2021sp/
390,,, Special Topics in Machine Learning,7792,http://www.cs.cornell.edu/courses/CS7792/2020sp/
391,,, Seminar in Natural Language Understanding,7794,http://www.cs.cornell.edu/courses/CS7794/2021fa/
392,,, Robotics Seminar,7796,http://robotics.cornell.edu/seminar/
393,,, Special Topics in Algorithms,7822,https://classes.cornell.edu/browse/roster/SP20/class/CS/7822
394,,, Seminar on Information Networks,7850,http://www.cs.cornell.edu/courses/CS7850/2020fa/
395,,, Seminar in Theory of Algorithms and Computing,7890,http://www.cs.cornell.edu/courses/CS7890/2021sp/
396,,, Cryptography Seminar,7893,https://classes.cornell.edu/browse/roster/FA20/class/CS/7893
397,,, Independent Research,7999,https://classes.cornell.edu/browse/roster/SP22/class/CS/7999
